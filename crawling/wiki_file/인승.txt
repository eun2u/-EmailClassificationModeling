곱셈(영어: multiplication)은 주로 '×', '⋅'로 표기되는 연산으로, 산술에서 덧셈, 뺄셈, 나눗셈과 함께 사칙연산을 이룬다. 두 자연수의 곱셈은 덧셈의 반복을 나타낸다. 예를 들어 3과 4의 곱(3 × 4, 3 곱하기 4)은 3을 4번 반복해 더한 것, 즉

  
    
      
        3
        ×
        4
        =
        3
        +
        3
        +
        3
        +
        3
        =
        12
      
    
    {\displaystyle 3\times 4=3+3+3+3=12}
  와 같다(오른쪽 첫째 그림).
곱셈의 요인이 되는 수들을 인수(因數, factor), 그 결과의 값이 되는 수를 곱(product)이라고 한다.
곱셈은 정수, 더 나아가 유리수, 실수, 복소수들에게도 유효하며, 교환법칙, 결합법칙, 덧셈에 대한 분배법칙을 만족한다. 어떤 수에 1을 곱하면 자기 자신 그대로이며, 0을 곱한 결과는 0이다. 곱셈의 역연산은 나눗셈이다. 예를 들어, 3에 4를 곱하면 12이므로, 12를 3으로 나누면 4다. 같은 수를 여러번 곱한 연산을 거듭제곱이라고 한다. 곱셈은 더 일반적인 대상, 이를테면 행렬, 함수 등에게도 정의된다. 더 일반적인 대수 구조에서도 정의 가능하다. 예를 들어 군의 연산은 많은 경우 곱셈으로 불린다.
곱셈에게는 직사각형의 넓이(오른쪽 둘째 그림), 확대와 축소(오른쪽 셋째 그림) 등의 의미도 부여된다.

일반적인 정의
(0이 아닌) 자연수 a (피승수)와 b (승수)에 대하여, 다음과 같이 a를 총 b번 더한다고 하자.

  
    
      
        
          
            
              
                a
                +
                ⋯
                +
                a
              
              ⏟
            
          
          
            b
          
        
      
    
    {\displaystyle \underbrace {a+\cdots +a} _{b}}
  이를 a와 b를 곱한다고 하고, 그 결과인 
  
    
      
        a
        ×
        b
      
    
    {\displaystyle a\times b}
  를 a와 b의 곱 또는 적(積, 영어: product)이라고 한다. 또한 여기서 반복해서 더해진 수 a를 피승수(被乘數, 영어: multiplicand)라 하고, 그 더한 횟수를 나타낸 수 b를 승수(乘數, 영어: multiplier)라 한다. 또한 이 두 수를 통틀어 인수(因數, 영어: factor)라 하며, 둘 중 어느 것이 피승수이며 승수인지는 문맥에 따라 다르나 교환법칙이 성립하는 한 순서에 상관없이 같은 값을 낸다.

표기
예컨대 a와 b의 곱은 a×b, a·b, ab 등으로 다양하게 표기되는데, 이는 흔히 a 곱하기 b라고 읽는다. 이 중 곱셈 기호 '×'를 사용한 중치 표기법가 가장 일반적인 표기 중 하나이다.
때론 점연산 기호 '⋅'가 곱셈 기호를 대신한다. 마침표를 소수점으로 하는 곳(대한민국, 미국, 영국 등)에서 이는 일반적인 사용법이다. 쉼표를 소수점으로 하는 독일, 프랑스 등에서는 점연산 기호 '⋅' 또는 마침표 '.'가 곱셈을 표기하는 데 쓰인다. 5 곱하기 2로 예를 들면:

  
    
      
        5
        ⋅
        2
      
    
    {\displaystyle 5\cdot 2}
   또는 
  
    
      
        5
        
        .
        
        2
      
    
    {\displaystyle 5\,.\,2}
  대수학에서 인수가 문자로 표기될 때, 또는 인수가 괄호에 감싸진 경우, 곱셈 기호를 생략할 수 있다. 예:

  
    
      
        7
        x
      
    
    {\displaystyle 7x}
   (7 곱하기 x. 이때 7과 같은 수를 계수라고 한다)

  
    
      
        a
        b
      
    
    {\displaystyle ab}
   (a×b)

  
    
      
        2
        (
        1
        +
        6
        )
      
    
    {\displaystyle 2(1+6)}
   (2×(1 + 6))다만 곱셈 기호를 생략하면 혼동이 생기는 경우도 있다. 예컨대 십진법으로 표기한 52는 5 x 2로 오인될 수 있다. 괄호가 감싼 인수와의 곱셈 a(b + c)는 함수의 표기법과 혼동된다.

셋 이상의 수의 곱셈을 표기할 때, 괄호를 통해 연산 순서를 명시해줄 수 있다. 하지만 결합법칙이 성립하는 대부분의 경우, 괄호를 생략해도 무방하다. 예:

  
    
      
        1
        ×
        2
        ×
        3
      
    
    {\displaystyle 1\times 2\times 3}
   (1, 2, 3의 곱)

  
    
      
        a
        b
        c
        d
        e
      
    
    {\displaystyle abcde}
   (a, b, c, d, e의 곱)벡터 간의 곱셈에서는 '
  
    
      
        ×
      
    
    {\displaystyle \times }
  ' 기호는 벡터곱을, '
  
    
      
        ⋅
      
    
    {\displaystyle \cdot }
  ' 기호는 스칼라곱을 뜻한다.
컴퓨터 연산에서는 보통 별표 '*'를 곱셈에 사용한다. 이러한 관례는 포트란 프로그래밍 언어에서 시작되었다.

성질
n과 m이 자연수일 때, n을 m번 더한 것과 m을 n번 더한 것은 같은 수이다. 곧,

교환법칙: n × m = m × n이 성립한다.
【예: 2 × 1 = 2, 1 × 2 = 2】
또한 여러 번의 곱셈의 결과는 그 곱을 내는 중간 순서에 따라서 달라지지 않는다. 곧,

결합법칙: (n × m) × l = n × (m × l)이 성립한다.
또한 곱과 합 사이에는 다음의 법칙이 성립한다:

분배법칙: n × (m + l) = n × m + n × l두 자연수 m, n의 곱셈은 위에서처럼 반복되는 덧셈으로 정의된다.

  
    
      
        m
        ×
        n
        =
        
          
            
              
                m
                +
                m
                +
                m
                +
                ⋯
                +
                m
              
              ⏟
            
          
          
            n
          
        
        =
        
          ∑
          
            i
            =
            1
          
          
            n
          
        
        m
      
    
    {\displaystyle m\times n=\underbrace {m+m+m+\cdots +m} _{n}=\sum _{i=1}^{n}m}
  
부호가 있는 두 수의 곱셈은 부호가 없는 듯이 곱한 뒤 알맞은 부호를 추가해준다. '양수 × 양수 = 양수', '양수 × 음수 = 음수', '음수 × 양수 = 음수', '음수 × 음수 = 양수' 가 성립한다.
두 정수의 곱셈, 예를 들어 3 × (-5) = -15는 부호 있는 수 사이의 곱셈의 예이다. 유리수 또는 실수와는 달리, 모든 두 정수 사이에 어떤 정수 '배수'를 찾을 수는 없다. 
복소수의 곱셈은 실수 곱셈으로의 전환을 통해 계산된다. (a + bi)(c + di) = (ac - bd) + (ad + bc)i. (r1eiθ1)(r2eiθ2) = r1r2ei(θ1 + θ2). 이는 어떤 면에서 '회전'의 의미를 포함한다.

형식적 정의
자연수의 곱셈
페아노 산술에서는, 자연수의 곱셈을 다음과 같은 두 공리로 기술한다.

  
    
      
        m
        ×
        0
        =
        0
      
    
    {\displaystyle m\times 0=0}
  

  
    
      
        m
        ×
        S
        (
        n
        )
        =
        m
        ×
        n
        +
        m
      
    
    {\displaystyle m\times S(n)=m\times n+m}
  (S(n)은 n의 따름수이다.) 이 둘은 자연수의 집합론적 모형에서 자연수 곱셈의 정의로서 사용되는데, 이때 곱셈의 존재성과 유일성은 자연수에 대한 재귀정리에 의해 보장된다.

정수, 유리수, 실수, 복소수의 곱셈
N
        
        ,
        
          Z
        
        ,
        
          Q
        
        ,
        
          R
        
      
    
    {\displaystyle \mathbb {N} ,\mathbb {Z} ,\mathbb {Q} ,\mathbb {R} }
   는 각각 자연수,정수,유리수,실수 일때,정수 내지 복소수 수 체계를 공리화했을 때, 곱셈은 일정한 조건을 만족하는 이항 연산으로서 기술된다. 이들을 형식적으로 구성할 수도 있다. (특히 집합론에서) 정수 체계는 ℕ × ℕ 위의 동치류로서 구성되며, 이때 곱셈은 다음과 같은 방법으로 잘 정의된(well-defined) 것으로 된다.

  
    
      
        (
        a
        ,
        b
        )
        ⋅
        (
        c
        ,
        d
        )
        =
        (
        a
        c
        +
        b
        d
        ,
        a
        d
        +
        b
        c
        )
      
    
    {\displaystyle (a,b)\cdot (c,d)=(ac+bd,ad+bc)}
  
  
    
      
        (
        a
        ,
        b
        ,
        c
        ,
        d
      
    
    {\displaystyle (a,b,c,d}
  는 자연수
  
    
      
        )
      
    
    {\displaystyle )}
  이와 비슷하게 유리수, 실수, 복소수 체계는 각각 ℤ × ℤ⧵{0}의 동치류, 데데킨트 절단 집합, ℝ2로서 구성되며 곱셈의 구성은 각각 다음과 같다.

  
    
      
        (
        a
        ,
        b
        )
        ⋅
        (
        c
        ,
        d
        )
        =
        (
        a
        c
        ,
        b
        d
        )
        ,
        
        a
        ,
        b
        ,
        c
        ,
        d
        ∈
        
          Z
        
        ,
         
        b
        ,
        d
        ≠
        0
      
    
    {\displaystyle (a,b)\cdot (c,d)=(ac,bd),\quad a,b,c,d\in \mathbb {Z} ,\ b,d\neq 0}
  
  
    
      
        
          r
          
            1
          
        
        
          r
          
            2
          
        
        =
        
          
            {
            
              
                
                  
                    
                      Q
                    
                    
                      −
                    
                  
                  ∪
                  {
                  x
                  y
                  :
                  x
                  ∈
                  
                    r
                    
                      1
                    
                  
                  ,
                   
                  y
                  ∈
                  
                    r
                    
                      2
                    
                  
                  ,
                   
                  x
                  ,
                  y
                  ≥
                  0
                  }
                
                
                  
                    r
                    
                      1
                    
                  
                  ,
                  
                    r
                    
                      2
                    
                  
                  ≥
                  0
                
              
              
                
                  ε
                  
                    |
                  
                  
                    r
                    
                      1
                    
                  
                  
                    |
                  
                  
                    |
                  
                  
                    r
                    
                      2
                    
                  
                  
                    |
                  
                
                
                  
                    otherwise
                  
                
              
            
            
          
        
        ,
        
        
          r
          
            1
          
        
        ,
        
          r
          
            2
          
        
        ∈
        
          R
        
      
    
    {\displaystyle r_{1}r_{2}={\begin{cases}\mathbb {Q} ^{-}\cup \{xy:x\in r_{1},\ y\in r_{2},\ x,y\geq 0\}&r_{1},r_{2}\geq 0\\\varepsilon |r_{1}||r_{2}|&{\text{otherwise}}\end{cases}},\quad r_{1},r_{2}\in \mathbb {R} }
  
  
    
      
        (
        a
        ,
        b
        )
        ⋅
        (
        c
        ,
        d
        )
        =
        (
        a
        c
        −
        b
        d
        ,
        a
        d
        +
        b
        c
        )
        ,
        
        a
        ,
        b
        ,
        c
        ,
        d
        ∈
        
          R
        
      
    
    {\displaystyle (a,b)\cdot (c,d)=(ac-bd,ad+bc),\quad a,b,c,d\in \mathbb {R} }

계산법
역사적으로는 곱셈을 빨리 행하기 위해 주산 등의 도구가 사용되기도 했다. 또한 비교적 작은 자연수의 곱셈의 암산을 위해 구구단, 19단 등을 외우기도 한다.
큰 자연수(이를테면 두 자릿수와 두 자릿수의 곱셈)를 곱할 때에는 곱하려는 두 수를 세로로 나열해 구구법에 기초하여 계산할 수 있다(위 그림)

같이 보기
곱셈 알고리즘
나눗셈
역수
소인수분해
수열의 곱
곱집합

각주
참고 문헌
Tao, Terence (2016). 《Analysis I》. Texts and Readings in Mathematics (영어) 37 3판. Singapore: Springer. doi:10.1007/978-981-10-1789-6. ISBN 978-981-10-1789-6. ISSN 2366-8725. LCCN 2016940817.